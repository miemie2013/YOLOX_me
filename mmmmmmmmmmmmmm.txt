


git config --global user.name "miemie133"
git config --global user.email "12656772+miemie133@user.noreply.gitee.com"

git clone https://gitee.com/miemie133/yolox_me.git


git add .

git commit -m "f"

git remote add origin https://gitee.com/miemie133/yolox_me.git

git push -u origin master



git add .
git commit -m "f"
git push -u origin master



wget https://github.com/Megvii-BaseDetection/YOLOX/releases/download/0.1.1rc0/yolox_s.pth


pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple

pip install torch==1.10.1+cu102 torchvision==0.11.2+cu102 torchaudio==0.10.1 -f https://download.pytorch.org/whl/torch_stable.html


----------------------- 预测 -----------------------
python tools/demo.py image -f exps/default/yolox_s.py -c yolox_s.pth --path assets/000000000019.jpg --conf 0.15 --tsize 640 --save_result --device gpu



----------------------- 训练 -----------------------
nohup xxx     > ppyolo.log 2>&1 &

export CUDA_VISIBLE_DEVICES=7,8
nohup python tools/train.py -f exps/default/yolox_tiny_coco_baseline.py -d 2 -b 64 --fp16     > yolox_tiny_coco_baseline.log 2>&1 &


----------------------- 复现COCO -----------------------
2023.09.29   8卡, 每卡批大小32
export CUDA_VISIBLE_DEVICES=0,1,2,3,4,5,6,7
nohup python tools/train.py -f exps/default/yolox_s.py -d 8 -b 256 --fp16     > yolox_s.log 2>&1 &

2023.09.29   4卡, 每卡批大小32
export CUDA_VISIBLE_DEVICES=0,1,2,3
nohup python tools/train.py -f exps/default/yolox_s.py -d 4 -b 128 --fp16     > yolox_s.log 2>&1 &



----------------------- 评估 -----------------------
python tools/eval.py -f exps/default/yolox_s.py -d 1 -b 8 -c yolox_s.pth --conf 0.001 --tsize 640

 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.405
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.593
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.438
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.233
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.448
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.541
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.326
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.531
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.574
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.367
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.635
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.724



----------------------- 迁移学习，带上-c（--ckpt）参数读取预训练模型。 -----------------------
迁移学习（不冻结骨干网络）:（可以加--fp16， -eb表示验证时的批大小）
python tools/train.py -f exps/default/yolox_s_voc2012.py -d 1 -b 24 -c yolox_s.pth


1机2卡训练：(发现一个隐藏知识点：获得损失（训练）、推理 都要放在模型的forward()中进行，否则DDP会计算错误结果。)
export CUDA_VISIBLE_DEVICES=0,1
nohup python tools/train.py -f exps/default/yolox_s_voc2012.py -d 2 -b 24 -c yolox_s.pth     > yolox_s.log 2>&1 &


实测 yolox_s 的AP最高可以到达（日志见 train_ppyolo_in_voc2012/yolox_s_voc2012.txt ）
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.516
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.741
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.575
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.174
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.379
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.598



